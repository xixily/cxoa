<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.chaoxing.oa.controller" />

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- 能够将POJO对象自动转换为JSON对象 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO（Plain Ordinary Java Object）简单的Java对象的映射 -->
	<!-- 例如@ResponseBody的作用是把返回值直接写到HTTP response body里 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称String的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/" p:suffix=".jsp" />
		
	<!-- 文件上传下载 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>



	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.chaoxing.oa.interceptors.SessionInterceptor">
				<!-- 不需要session验证的地址 -->
				<property name="excludeUrls">
					<list>
						<value>/user/login.action</value>
						<value>/user/modifyPassword.action</value>
						<value>/user/logout.action</value>
						<!-- <value>/employee/queryOStruct.action</value> -->
						<!-- <value>/file/codeImage.action</value> -->
						<!-- <value>/employee/getCompany.action</value> -->
						<!-- <value>/druidController/druid.action</value> -->
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.chaoxing.oa.interceptors.SecurityInterceptor">
				<!-- 不需要权限验证的地址 -->
				<property name="excludeUrls">
					<list>
						<value>/user/login.action</value>
						<value>/user/logout.action</value>
						<value>/menu/allMenu.action</value>
						<value>/system/allMenu.action</value>
						<value>/employee/getFourThLevel.action</value>
						<value>/employee/getOStruct.action</value>
						<value>/employee/getCompany.action</value>
						<value>/employee/getInsuranceCompany.action</value>
						<value>/system/queryMenus.action</value>
						<value>/user/modifyPassword.action</value>
						<!-- <value>/file/codeImage.action</value> -->
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>


</beans>